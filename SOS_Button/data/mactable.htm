<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
	<title>RfCodeTable</title>
	<script>
		var HttpClient = function () {
			this.get = function (aUrl, aCallback) {
				var anHttpRequest = new XMLHttpRequest();
				anHttpRequest.onreadystatechange = function () {
					if (anHttpRequest.readyState == 4 && anHttpRequest.status == 200)
						aCallback(anHttpRequest.responseText);
				}

				anHttpRequest.open("GET", aUrl, true);
				anHttpRequest.send(null);
			}
			this.post = function (aUrl, aRgs, aCallback) {
				var anHttpRequest = new XMLHttpRequest();
				anHttpRequest.onreadystatechange = function () {
					if (anHttpRequest.readyState == 4 && anHttpRequest.status == 200)
						aCallback(anHttpRequest.responseText);
				}

				anHttpRequest.open("POST", aUrl, true);
				anHttpRequest.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
				anHttpRequest.send(aRgs);
			}
		}
		var client = new HttpClient();

		var connection = null;
		function startSocket(port) {
			connection = new WebSocket('ws://' + location.hostname + ':' + port.toString() + '/', ['arduino']);
			connection.onopen = function () {
				var myJSON = { "CM": "C1", "Page": 1, "Id": 12345 };
				//Gui lenh get data
				var StrJSON = JSON.stringify(myJSON);
				connection.send(StrJSON);
				console.log('Send: ', StrJSON);
			};
			connection.onerror = function (error) {
				console.log('WebSocket Error ', error);
			};

			connection.onmessage = function (e) {
				console.log('Server: ', e.data);
				obj = JSON.parse(e.data);
				if (obj.ST=="ERR") {
					alert(obj.Erm);
					return;
				}

				//{ "CM": "S1", "Page": 1, "Wifi": {"Ssid":"Tien Huy", "Rssi":90, "Mac": "00:01:01:01:01:01"},"ST": "OK", "Erm":"Json OK"};
				if (obj.Wifi) {
					var pos = myTable.indexOf(obj.Wifi.Ssid);
					if(pos!=-1) return;
					var TableTrbk = myTableTr;					
					TableTrbk = TableTrbk.replace(/{rowcolor}/g, "c01");
					TableTrbk = TableTrbk.replace("{ssid}", obj.Wifi.Ssid);
					TableTrbk = TableTrbk.replace("{mac}", obj.Wifi.Mac);
					myTable += TableTrbk;
					document.getElementById('tablePrint').innerHTML = myTable;	
				}
			};
		}

		var myTable = "<tr><th onclick=\"SettingMode(1)\">STT</th>\
					<th onclick=\"SettingMode(2)\">Tên Wifi</th>\
					<th>Địa Chỉ Mac</th>\
					<th>Lưu</th></tr>";
		var myTableTr = "<tr><td id=\"{rowcolor}\"></td>\
					<td id=\"{rowcolor}\">{ssid}</td>\
					<td id=\"{rowcolor}\">{mac}</td>\
					<td id=\"{rowcolor}\"><input type=\"submit\" onclick=\"SetMacFunction(this,2)\" value=\"Chọn\"></td>\
					</tr>";

		//Ham doi pass
		function SettingMode(Mode) {
			if (Mode == 1) window.open("./doimatkhau.htm");
			if (Mode == 2) window.open("./wifi");
		}

		function SetMacFunction(element, Mode) {
			if (Mode == 2) {				
				var Pass = prompt("Please enter your pass");
				if (Pass == null) return;
				var table = document.getElementById('tablePrint');
				var row = element.parentNode.parentNode.rowIndex;
				var Ssid = table.rows[row].cells[1].innerHTML;
				var Mac = table.rows[row].cells[2].innerHTML;
				client.post('/SetMac', "Pass=" + Pass + "&Ssid=" + Ssid + "&Mac=" + Mac, function (response) {
					console.log(response);
					var obj = JSON.parse(response);
					alert(obj.St);
				});
			}
		}

		var WsPort = 81;
		function onBodyLoad() {
			client.get('/config.txt', function (response) {
				console.log(response);
				var obj = JSON.parse(response);
				WsPort = Number(obj.WSPort);
				startSocket(WsPort);
			});
		}
	</script>
	<style>
		table {
			counter-reset: rowNumber;
		}

		table tr:not(:first-child) {
			counter-increment: rowNumber;
		}

		table tr td:first-child::before {
			content: counter(rowNumber);
			min-width: 1em;
			margin-right: 0.5em;
		}

		td#c01 {
			background-color: #f1f1c1;
			color: black;
		}

		td#c02 {
			background-color: blue;
			color: white;
		}

		td#c03 {
			background-color: green;
			color: white;
		}

		table,
		th,
		td {
			border: 1px solid black;
			text-align: center;
			background-color: #f1f1c1;
		}

		th,
		td {
			padding: 5px;
		}

		th {
			background-color: black;
			color: white;
		}

		.c {
			text-align: center;
		}

		div,
		input,
		select {
			padding: 0px;
			font-size: 1em;
		}

		input {
			width: 100%;
		}

		body {
			text-align: center;
			font-family: verdana;
		}

		button {
			border: 0;
			border-radius: 0.3rem;
			background-color: #4CAF50;
			color: #fff;
			line-height: 2.4rem;
			font-size: 1.2rem;
			width: 100%;
		}

		.switch {
			position: relative;
			display: inline-block;
			width: 60px;
			height: 34px;
		}

		.switch input {
			display: none;
		}

		.slider {
			position: absolute;
			cursor: pointer;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background-color: #ccc;
			-webkit-transition: .4s;
			transition: .4s;
		}

		.slider:before {
			position: absolute;
			content: "";
			height: 26px;
			width: 26px;
			left: 4px;
			bottom: 4px;
			background-color: white;
			-webkit-transition: .4s;
			transition: .4s;
		}

		input:checked+.slider {
			background-color: #2196F3;
		}

		input:focus+.slider {
			box-shadow: 0 0 1px #2196F3;
		}

		input:checked+.slider:before {
			-webkit-transform: translateX(26px);
			-ms-transform: translateX(26px);
			transform: translateX(26px);
		}

		/* Rounded sliders */

		.slider.round {
			border-radius: 34px;
		}

		.slider.round:before {
			border-radius: 50%;
		}
	</style>
</head>

<body style="" onload="onBodyLoad()">
	<div style="text-align:left;display:inline-block;min-width:260px;">
		<input type="submit" id="Save" value="Bảng địa chỉ thiết bị" style="width:100%">
		<table id="tablePrint" width="100%"></table>
		<script>
			document.getElementById('tablePrint').innerHTML = myTable;	
		</script>
	</div>
</body>

</html>